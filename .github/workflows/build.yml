name: Build

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: proxier
            asset_name: proxier-linux-amd64
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            artifact_name: proxier.exe
            asset_name: proxier-windows-amd64.exe
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            artifact_name: proxier
            asset_name: proxier-macos-amd64
            target: x86_64-apple-darwin
          - os: ubuntu-latest
            artifact_name: proxier
            asset_name: proxier-android-arm64
            target: aarch64-linux-android

    steps:
    - uses: actions/checkout@v3
    
    - name: Install Rust toolchain
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        target: ${{ matrix.target }}
        override: true
    
    - name: Install Android NDK
      if: matrix.target == 'aarch64-linux-android'
      uses: nttld/setup-ndk@v1
      with:
        ndk-version: r25b
        add-to-path: false
    
    - name: Build
      run: |
        if [ "${{ matrix.target }}" = "aarch64-linux-android" ]; then
          export ANDROID_NDK_HOME=$ANDROID_NDK_ROOT
          export PATH=$ANDROID_NDK_HOME/toolchains/llvm/prebuilt/linux-x86_64/bin:$PATH
          cargo build --release --target aarch64-linux-android
        else
          cargo build --release --target ${{ matrix.target }}
        fi
      shell: bash
      
    - name: Run tests
      if: matrix.target != 'aarch64-linux-android'
      run: cargo test --verbose --target ${{ matrix.target }}
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.asset_name }}
        path: target/${{ matrix.target }}/release/${{ matrix.artifact_name }}
